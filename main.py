
import disnake
from disnake.ext import commands
from pymongo import MongoClient
import config as con

bot = commands.Bot(command_prefix="=", intents = disnake.Intents.all())
cluster = MongoClient(con.MONGODB_URL)
db = cluster.botdb
coll = db.clans
clans = cluster.botdb.clans
channels = cluster.botdb.channels
repa = "üî∞"

@bot.event
async def on_ready():
	print(f'[BOT] –ë–æ—Ç {bot.user.name} –∑–∞–ø—É—â–µ–Ω')

@bot.event
async def on_message(message):
	await bot.process_commands( message )
	if clans.find_one({"members": message.author.name}):
		coll.update_one({"members": message.author.name}, {'$inc': {'rep': 0.5}})
	if clans.find_one({"owner": message.author.id}):
		coll.update_one({"owner": message.author.id}, {'$inc': {'rep': 0.5}})



@bot.command(aliases=['c-create'])
async def c_create(ctx,*, name: str = None):
	channel_obj = channels.find_one({"name": "Selenskaya"})
	if ctx.channel.id in channel_obj["channels"]:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ! \n `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–µ—Ç–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ`",
			color = disnake.Colour.red()
		))

	query = {"name": name}
	for value in coll.find(query):
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–ö–ª–∞–Ω —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! \n `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –∫–ª–∞–Ω–∞`",
			color = disnake.Colour.red()
				))
	qerry = {"owner": ctx.author.id}
	for value in coll.find(qerry):
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–ª–∞–Ω–µ! \n `–ü–æ–∫–∏–Ω—å—Ç–µ –∫–ª–∞–Ω –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã`",
			color = disnake.Colour.red()
				))

	if not name:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description=f"–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞! \n **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ** \n > ` =c-create [–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞]` \n **–ü—Ä–∏–º–µ—Ä** \n > ` =c-create Selenskaya`",
			color = disnake.Colour.red()
				))


	if not ctx.guild.get_role(863035902829527040) in ctx.author.roles:
		await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω –±–µ–∑ —Ä–æ–ª–∏ <@&863035902829527040>!",
			color = disnake.Colour.red()
				))
	
	if ctx.guild.get_role(863035902829527040) in ctx.author.roles:
		post = {
    			"name": name,
    			"rep": 0,
    			"owner": ctx.author.id,
    			"members": []
			}
		clans.insert_one(post)
		await ctx.send(embed = disnake.Embed(
    		title=":white_check_mark: –í—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ :white_check_mark:",
			description=f"–ö–ª–∞–Ω **{name}** —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n**–£–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞–Ω–µ**\n> `=c-info {name}` ",
    		color = disnake.Colour.green()
    			 ))
	
	
@bot.command(aliases=['c-info'])
async def c_info(ctx,*, name):
	channel_obj = channels.find_one({"name": "Selenskaya"})
	if ctx.channel.id in channel_obj["channels"]:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ! \n `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–µ—Ç–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ`",
			color = disnake.Colour.red()
		))

	if not name:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞! \n **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ** \n > ` =c-info [–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞]` \n **–ü—Ä–∏–º–µ—Ä** \n > ` =c-info Selenskaya`",
			color = disnake.Colour.red()
				))

	clan_obj = clans.find_one({"name": name})
	if not clan_obj:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–ö–ª–∞–Ω–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!",
			color = disnake.Colour.red()
				))


	clan_obj = clans.find_one({"name": name})
	okay = len(coll.find_one({"name": name})['members'])
	embed = disnake.Embed(title = name,color = disnake.Colour.blue())
	embed.add_field(name="üí† –í–ª–∞–¥–µ–ª–µ—Ü", value= f"> {ctx.guild.get_member(clan_obj['owner'])}", inline=False)
	embed.add_field(name="üë• –í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", value= f"> {okay}", inline=False)
	embed.add_field(name=f"{repa} –†–µ–ø—É—Ç–∞—Ü–∏—è", value = f"> {clan_obj['rep'] if clan_obj['rep'] else '0'} {repa}" , inline=False)
	return await ctx.send(embed=embed)

@bot.command(aliases=['c-join'])
async def c_join(ctx,*, name: str = None):
	channel_obj = channels.find_one({"name": "Selenskaya"})
	if ctx.channel.id in channel_obj["channels"]:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ! \n `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–µ—Ç–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ`",
			color = disnake.Colour.red()
		))

	if not name:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞! \n **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ** \n > ` =c-join [–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞]` \n **–ü—Ä–∏–º–µ—Ä** \n > ` =c-join Selenskaya`",
			color = disnake.Colour.red()
				))
	clan_obj = clans.find_one({"name": name})
	if not clan_obj:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–ö–ª–∞–Ω–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!",
			color = disnake.Colour.red()))

	find = False
	for value in clans.find():
		if ctx.author.id in value['members']:
			find=True
	
	if clans.find_one({"owner": ctx.author.id}) or find:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –∫–∞–∫–æ–º-—Ç–æ –∫–ª–∞–Ω–µ!",
			color = disnake.Colour.red()
				))


	clan_obj['members'].append(ctx.author.name)
	clans.update_one({"name": name}, {"$set":{'members': clan_obj['members']}})


	await ctx.send(embed = disnake.Embed(
		title=":white_check_mark: –í—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ :white_check_mark:",
		description=f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–∏–¥–µ–Ω–∏–ª–∏—Å—å –∫ –∫–ª–∞–Ω—É **{name}**!",
		color = disnake.Colour.green()
			 ))

@bot.command(aliases=['c-top'])
async def c_top(ctx,*, name: str = None):
	channel_obj = channels.find_one({"name": "Selenskaya"})
	if ctx.channel.id in channel_obj["channels"]:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ! \n `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–µ—Ç–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ`",
			color = disnake.Colour.red()
		))

	embed = disnake.Embed(title="‚öî |Selenskaya: –¢–æ–ø-10 –∫–ª–∞–Ω–æ–≤ –ø–æ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏", description="–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ **–∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ä–µ–ø—É—Ç–∞—Ü–∏–∏** \n –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –≥–∏–ª—å–¥–∏–∏: `=c-info [–ù–∞–∑–≤–∞–Ω–∏–µ]` \n –í—Å—É–ø–∏—Ç—å –≤ –≥–∏–ª—å–¥–∏—é: `=c-join [–ù–∞–∑–≤–∞–Ω–∏–µ]`",  color=disnake.Color.orange())
	i = 0

	clans2 = clans.find().sort([
	("reps", -1)
	]).limit(10)

	for clan in clans2:
		owner = ctx.guild.get_member(clan['owner'])
		try:
			i += 1
			embed.add_field(name=f"{i}. {clan['name']}", value=f"–†–µ–ø—É—Ç–∞—Ü–∏—è: {clan['rep'] if clan['rep'] else '0'} {repa}", inline=False)
		except Exception as e:
			print(e)
			i -= 1
	await ctx.send(embed=embed)

		

@bot.command(aliases=['c-leave'])
async def c_leave(ctx, *, name: str = None):
	channel_obj = channels.find_one({"name": "Selenskaya"})
	if ctx.channel.id in channel_obj["channels"]:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ! \n `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–µ—Ç–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ`",
			color = disnake.Colour.red()
		))

	if not name:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞! \n **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ** \n > ` =c-leave [–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞]` \n **–ü—Ä–∏–º–µ—Ä** \n > ` =c-leave Selenskaya`",
			color = disnake.Colour.red()
				))
	clan_obj = clans.find_one({"name": name})
	if not clan_obj:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–ö–ª–∞–Ω–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!",
			color = disnake.Colour.red()))
	if clans.find_one({"owner": ctx.author.id}):
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ –∫–ª–∞–Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Å–æ–∑–¥–∞–ª–∏!",
			color = disnake.Colour.red()
				))


	clan_obj['members'].remove(ctx.author.name)
	clans.update_one({"name": name}, {"$set":{"members": clan_obj['members']}})
	return await ctx.send(embed = disnake.Embed(
			title=":white_check_mark: –í—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ :white_check_mark:",
			description=f"–í—ã –ø–æ–∫–∏–Ω—É–ª–∏ –∫–ª–∞–Ω **{name}**!",
			color = disnake.Colour.green()
			))



@bot.command(aliases=['c-delete'])
async def c_delete(ctx,*, name: str = None):
	channel_obj = channels.find_one({"name": "Selenskaya"})
	if ctx.channel.id in channel_obj["channels"]:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ! \n `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–µ—Ç–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ`",
			color = disnake.Colour.red()
		))

	if not name:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞! \n **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ** \n > ` =c-delete [–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞]` \n **–ü—Ä–∏–º–µ—Ä** \n > ` =c-delete Selenskaya`",
			color = disnake.Colour.red()
				))

	if not clans.find_one({"name": name}):
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–ö–ª–∞–Ω–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! ",
			color = disnake.Colour.red()))

	qerry = {"name": name, "owner": ctx.author.id}
	if clans.find_one({"name": name})["owner"] == ctx.author.id:
		await ctx.send(embed = disnake.Embed(
			title=":white_check_mark: –í—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ :white_check_mark:",
			description=f"–ö–ª–∞–Ω **{name}** –±—ã–ª —É–¥–∞–ª—ë–Ω!",
			color = disnake.Colour.green()
				))
		clans.delete_one({'name': name})

	else:
		await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∫–ª–∞–Ω",
			color = disnake.Colour.red()
				))


@bot.command(aliases=['c-perm'])
async def c_perm(ctx, bbc, channel):
	if bbc == 'allow':
		channel_name = int(channel.strip("<#>"))
		name = "Selenskaya"
		channels_arr = channels.find_one({"name": name})['channels']
		channels_arr.remove(channel_name)
		channels.update_one({"name": name}, {"$set":{"channels": channels_arr}})
		return await ctx.send(embed = disnake.Embed(
		title=":white_check_mark: –í—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ :white_check_mark:",
		description = f"–í—ã —É–±—Ä–∞–ª–∏ <#{channel_name}> –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã—Ö –∫–∞–Ω–Ω–∞–ª–æ–≤",
		color = disnake.Colour.green()))

	if bbc == 'deny':
		channel_name = int(channel.strip("<#>"))
		name = "Selenskaya"
		channels_arr = channels.find_one({"name": name})['channels']
		channels_arr.append(channel_name)
		channels.update_one({"name": name}, {"$set":{"channels": channels_arr}})
		return await ctx.send(embed = disnake.Embed(
            title=":white_check_mark: –í—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ :white_check_mark:",
            description = f"–í—ã –¥–æ–±–∞–≤–∏–ª–∏ <#{channel_name}> –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã—Ö –∫–∞–Ω–Ω–∞–ª–æ–≤",
            color = disnake.Colour.purple()))
		

@bot.command(aliases=['c-listfasfas'])
async def c_list(ctx, *, name = None):
	channel_obj = channels.find_one({"name": "Selenskaya"})
	if ctx.channel.id in channel_obj["channels"]:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ! \n `–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–µ—Ç–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ`",
			color = disnake.Colour.red()
		))

	if not name:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞! \n **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ** \n > ` =c-list [–ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞]` \n **–ü—Ä–∏–º–µ—Ä** \n > ` =c-list Selenskaya`",
			color = disnake.Colour.red()
				))

	clan_obj = clans.find_one({"name": name})
	if not clan_obj:
		return await ctx.send(embed = disnake.Embed(
			title=":x: –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :x:",
			description="–ö–ª–∞–Ω–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!",
			color = disnake.Colour.red()
				))
	embed = disnake.Embed(title=f"üë• | –£—á–∞—Å—Ç–Ω–∏–∫–∏ –≥–∏–ª—å–¥–∏–∏ {name}", color=disnake.Color.orange())
	i = 0
	clans2 = clans.find({"name": name})
	for clan in clans2:
		try:
			i += 1
			embed.add_field(name=f"{i}.{clan['members']}", value="", inline=False )
		except Exception as e:
			print(e)
			i -= 1

	await ctx.send(embed=embed)

bot.run(con.BOT_TOKEN)